<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: wordpress | Bilal El Tayara]]></title>
  <link href="http://bilal.eltayara.net/blog/categories/wordpress/atom.xml" rel="self"/>
  <link href="http://bilal.eltayara.net/"/>
  <updated>2018-07-15T13:55:38+00:00</updated>
  <id>http://bilal.eltayara.net/</id>
  <author>
    <name><![CDATA[El Tayara Bilal]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Setting up Wordpress on a Vagrant box]]></title>
    <link href="http://bilal.eltayara.net/blog/2015/05/30/setting-up-wordpress-on-a-vagrant-box/"/>
    <updated>2015-05-30T08:50:16+00:00</updated>
    <id>http://bilal.eltayara.net/blog/2015/05/30/setting-up-wordpress-on-a-vagrant-box</id>
    <content type="html"><![CDATA[<p>I recently wanted to try <a href="http://wordpress.org">Wordpress</a> and explore its features.
For this I chose to install it an all its dependencies in a Vagrant box.<br/>
I followed the official <a href="http://codex.wordpress.org/Installing_WordPress">install instructions</a> and automated everything in provisioning shell scripts.</p>

<p><img class="center" src="/images/2015-05-30-setting-up-wordpress-on-a-vagrant-box/vagrant+wordpress.png"></p>

<!-- more -->


<p>Running <a href="http://wordpress.org">Wordpress</a> requires a web server, php support and a <a href="https://www.mysql.com/">MySQL</a> database.<br/>
I chose use <a href="http://www.ubuntu.com/">Ubuntu</a> as the box operating system. As a web server I chose to use the <a href="http://httpd.apache.org/">Apache HTTP Server</a>.</p>

<p>My provisioning strategy consisted of two shell scripts.
The first script called provision_once.sh is run only upon the box creation, and has privileged user rights. The second script called provision_always.sh is ran each time the box starts with a non privileged user rights.<br/>
This is specified in the Vagrant configuration file as follows:</p>

<pre><code>config.vm.provision "shell", path: "vagrant/provision_once.sh"
config.vm.provision "shell", path: "vagrant/provision_always.sh", run: "always", privileged: "false"  
</code></pre>

<p>The first part of provision_once.sh script installs required dependencies listed above:</p>

<pre><code>apt-get -qq -y update
apt-get -qq -y install apache2
apt-get -qq -y install php5 
apt-get -qq -y install php5-mysq  
</code></pre>

<p>After installing the <a href="https://www.mysql.com/">MySQL</a> server, I needed to configure it, and create the required <a href="http://wordpress.org">Wordpress</a> database.<br/>
To setup the root password for the <a href="https://www.mysql.com/">MySQL</a> server in attended way, one can use debconf-set-selections as shown below. I chose to go with no password as I was setting this up just for test purposes. <br/>
But this would have been too simple, as I expected the unexpected happened. The installation of the <a href="https://www.mysql.com/">MySQL</a> server didn&rsquo;t go as planned. The <a href="https://www.mysql.com/">MySQL</a> server was failing to start. The failure was only happening upon the box creation, doing manually the same steps was installing the <a href="https://www.mysql.com/">MySQL</a> server correctly.<br/>
After several attempts the only workaround I found was to perform the installation twice in the provisioning script:</p>

<pre><code>for i in {1..2}  
do
    debconf-set-selections &lt;&lt;&lt; 'mysql-server mysql-server/root_password password '  
    debconf-set-selections &lt;&lt;&lt; 'mysql-server mysql-server/root_password_again password '  
    apt-get -qq -y install mysql-server  
done  
</code></pre>

<p>Creating the database is rather straight forward using the <a href="https://www.mysql.com/">MySQL</a> command-line tool:</p>

<pre><code>mysql -uroot -e "CREATE DATABASE $DBNAME"
mysql -uroot -e "GRANT ALL PRIVILEGES ON $DBNAME.* to '$DBUSER'@'localhost' IDENTIFIED BY '$DBPASSWD'"  
mysql -uroot -e "FLUSH PRIVILEGES"
</code></pre>

<p>Next I needed to automate the download and the configuration of the Wordpress instance.<br/>
The part shown below will download and expand the latest <a href="http://wordpress.org">Wordpress</a> version from the official site.  It&rsquo;ll also configure <a href="http://wordpress.org">Wordpress</a> to use the <a href="https://www.mysql.com/">MySQL</a> database created earlier and generate the required authentication salts.</p>

<pre><code>cd /vagrant
wget -q https://wordpress.org/latest.tar.gz
tar -xzvf latest.tar.gz 
rm -f latest.tar.gz
cd wordpress
cp wp-config-sample.php wp-config.php   
sed -i.bak -u "s/database_name_here/$DBNAME/g" wp-config.php
sed -i.bak -u "s/username_here/$DBUSER/g" wp-config.php
sed -i.bak -u "s/password_here/$DBPASSWD/g" wp-config.php   
for i in {1..8}
do
    NEW_UUID=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 64 | head -n 1)
    sed -i.bak -u "0,/put your unique phrase here/s//$NEW_UUID/" wp-config.php      
done
</code></pre>

<p>Finally I needed to point the <a href="http://httpd.apache.org/">Apache HTTP Server</a> to the <a href="http://wordpress.org">Wordpress</a> site, this can be achieved as follows:</p>

<pre><code>sed -i.bak -u 's,/var/www/html,/vagrant/wordpress,g' /etc/apache2/sites-available/000-default.conf

echo '&lt;Directory /vagrant/wordpress&gt;' &gt;&gt; /etc/apache2/apache2.conf
echo '  Options Indexes FollowSymLinks' &gt;&gt; /etc/apache2/apache2.conf
echo '  AllowOverride None' &gt;&gt; /etc/apache2/apache2.conf
echo '  Require all granted' &gt;&gt; /etc/apache2/apache2.conf
echo '&lt;/Directory&gt;' &gt;&gt; /etc/apache2/apache2.conf

service apache2 restart
</code></pre>

<p>The provision always script is simple, it just make sure that the <a href="https://www.mysql.com/">MySQL</a> is up running upon the box start-up.</p>

<pre><code>if [[ ! "$(sudo service mysql status)" =~ "start/running" ]]
then
    sudo service mysql start
fi
</code></pre>

<p>Finally redirecting the port 80 to the host, makes the <a href="http://wordpress.org">Wordpress</a> instance accessible from the browser, and ready to use.</p>

<p><img class="center" src="/images/2015-05-30-setting-up-wordpress-on-a-vagrant-box/wordpress-install.png"></p>

<p>The complete configuration is available at my <a href="https://github.com/bil-t/wordpress-vagrant">wordpress-vagrant</a> GitHub repository.</p>
]]></content>
  </entry>
  
</feed>
